# Optional Environment Variables
# IMAGE_NAME - The main name of the image, to override the original name.

stages:
  - Build
  - Push

variables:
  IMAGE_NAME: 'stabletec/build-foe'

# Image Builds

.linux_build_template: &linux_build_template
  stage: Build
  tags:
    - container-builder
    - linux
    - podman
    - qemu
  except:
    refs:
      - main
  script:
    - ./linux-build.sh $NO_CACHE --tag build-foe-test --rm

.windows_build_template: &windows_build_template
  stage: Build
  tags:
    - container-builder
    - windows
    - amd64
    - ${WINDOWS_CONTAINER_BASE_VERSION}
  except:
    refs:
      - main
  script:
    - if ($env:NO_CACHE) { $env:NO_CACHE = "-NoCache" }
    - New-Item -Path $env:IMAGE_DIR/install-scripts -Type Directory
    - Copy-Item windows-install-scripts/* -Destination $env:IMAGE_DIR/install-scripts -Recurse
    - ./build-windows.ps1 $env:NO_CACHE -ImageName build-foe-test -ImageDir $env:IMAGE_DIR -Test

Arch/SteamOS Build:
  variables:
    OS: arch
  <<: *linux_build_template

Debian Build:
  variables:
    OS: debian
  <<: *linux_build_template

Fedora Build:
  variables:
    OS: fedora
  <<: *linux_build_template

openSUSE Build:
  variables:
    OS: opensuse
  <<: *linux_build_template

Ubuntu Build:
  variables:
    OS: ubuntu
  <<: *linux_build_template

MSYS Build (2019):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2019
    IMAGE_DIR: msys-ltsc2019
  <<: *windows_build_template

MSYS Build (2022):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2022
    IMAGE_DIR: msys-ltsc2022
  <<: *windows_build_template

Windows Build (2019):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2019
    IMAGE_DIR: windows-ltsc2019
  <<: *windows_build_template

Windows Build (2022):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2022
    IMAGE_DIR: windows-ltsc2022
  <<: *windows_build_template

# Image Push Stage

.linux_push_template: &linux_push_template
  stage: Push
  tags:
    - container-builder
    - linux
    - podman
    - qemu
  only:
    refs:
      - main
  script:
    - ./linux-build.sh $NO_CACHE --tag ${IMAGE_NAME} --push

.windows_push_template: &windows_push_template
  stage: Push
  tags:
    - container-builder
    - windows
    - amd64
    - ${WINDOWS_CONTAINER_BASE_VERSION}
  only:
    refs:
      - main
  script:
    - if ($env:NO_CACHE) { $env:NO_CACHE = "-NoCache" }
    - New-Item -Path $env:IMAGE_DIR/install-scripts -Type Directory
    - Copy-Item windows-install-scripts/* -Destination $env:IMAGE_DIR/install-scripts -Recurse
    - ./build-windows.ps1 $env:NO_CACHE -ImageDir $env:IMAGE_DIR -ImageName $env:IMAGE_NAME -Test -Push

Arch/SteamOS Push:
  variables:
    OS: arch
  <<: *linux_push_template

Debian Push:
  variables:
    OS: debian
  <<: *linux_push_template

Fedora Push:
  variables:
    OS: fedora
  <<: *linux_push_template

openSUSE Push:
  variables:
    OS: opensuse
  <<: *linux_push_template

Ubuntu Push:
  variables:
    OS: ubuntu
  <<: *linux_push_template

MSYS Push (2019):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2019
    IMAGE_DIR: msys-ltsc2019
  <<: *windows_push_template

MSYS Push (2022):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2022
    IMAGE_DIR: msys-ltsc2022
  <<: *windows_push_template

Windows Push (2019):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2019
    IMAGE_DIR: windows-ltsc2019
  <<: *windows_push_template

Windows Push (2022):
  variables:
    WINDOWS_CONTAINER_BASE_VERSION: ltsc2022
    IMAGE_DIR: windows-ltsc2022
  <<: *windows_push_template