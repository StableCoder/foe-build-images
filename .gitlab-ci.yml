# Global

stages:
  - Build
  - Push

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_REGISTRY: ''
  IMAGE_NAME: 'stabletec/build-foe'

# Image Builds

.build_image: &build_template
  except:
    - main
  script:
    - docker buildx build --pull ${EXTRA_BUILD_OPTIONS} --platform $(cat $OS/.cfg) -t test:${OS} -f ${OS}/Dockerfile .

Fedora Build:
  stage: Build
  tags:
    - docker-builder-linux
    - amd64
    - arm64
  variables:
    OS: fedora
  <<: *build_template

Ubuntu Build:
  stage: Build
  tags:
    - docker-builder-linux
    - amd64
    - arm64
    - riscv64
  variables:
    OS: ubuntu
  <<: *build_template

Windows Build:
  stage: Build
  except:
    - main
  tags:
    - docker-builder-windows
    - amd64
  script:
    - cd windows; .\image_builder.ps1 -imagename test -test

# Image Push Stage

.push_image: &push_template
  only:
    - main
  before_script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTRY}
  script:
    - docker buildx build --pull --push ${EXTRA_BUILD_OPTIONS} --platform $(cat ${OS}/.cfg) -t ${DOCKER_REGISTRY}${IMAGE_NAME}:${OS} -f ${OS}/Dockerfile .
  after_script:
    - docker logout ${DOCKER_REGISTRY}

Fedora Push:
  stage: Push
  tags:
    - docker-builder-linux
    - amd64
    - arm64
  variables:
    OS: fedora
  <<: *push_template

Ubuntu Push:
  stage: Push
  tags:
    - docker-builder-linux
    - amd64
    - arm64
    - riscv64
  variables:
    OS: ubuntu
  <<: *push_template

Windows Push:
  stage: Push
  only:
    - main
  tags:
    - docker-builder-windows
    - amd64
  before_script:
    - docker login -u $env:DOCKER_USER -p "$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY
  script:
    - cd windows; .\image_builder.ps1 -push -imagename ${env:DOCKER_REGISTRY}${env:IMAGE_NAME} -test
  after_script:
    - docker logout $env:DOCKER_REGISTRY