# Global

stages:
  - Build
  - Push

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  IMAGE_NAME: 'stabletec/build-foe'

# Image Builds

.build_image: &build_template
  stage: Build
  tags:
    - container-builder
    - linux
    - podman
    - qemu
  except:
    - main
  script:
    - ./linux-build.sh $NO_CACHE --tag test-foe

Arch/SteamOS Build:
  variables:
    OS: arch
  <<: *build_template

Debian Build:
  variables:
    OS: debian
  <<: *build_template

Fedora Build:
  variables:
    OS: fedora
  <<: *build_template

openSUSE Build:
  variables:
    OS: opensuse
  <<: *build_template

Ubuntu Build:
  variables:
    OS: ubuntu
  <<: *build_template

Windows Build:
  stage: Build
  except:
    - main
  tags:
    - docker-builder-windows
    - amd64
  script:
    - cd windows; .\image_builder.ps1 -imagename test -test

# Image Push Stage

.push_image: &push_template
  stage: Push
  tags:
    - container-builder
    - linux
    - podman
    - qemu
  only:
    - main
  script:
    - ./linux-build.sh $NO_CACHE --tag ${IMAGE_NAME} --push

Arch/SteamOS Push:
  variables:
    OS: arch
  <<: *push_template

Debian Push:
  variables:
    OS: debian
  <<: *push_template

Fedora Push:
  variables:
    OS: fedora
  <<: *push_template

openSUSE Push:
  variables:
    OS: opensuse
  <<: *push_template

Ubuntu Push:
  variables:
    OS: ubuntu
  <<: *push_template

Windows Push:
  stage: Push
  only:
    - main
  tags:
    - docker-builder-windows
    - amd64
  before_script:
    - docker login -u $env:DOCKER_USER -p "$env:DOCKER_PASSWORD" $env:DOCKER_REGISTRY
  script:
    - cd windows; .\image_builder.ps1 -push -imagename ${env:DOCKER_REGISTRY}${env:IMAGE_NAME} -test
  after_script:
    - docker logout $env:DOCKER_REGISTRY